C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\java\com\example\panduansholat\SplashActivity.java:10: Warning: The application should not provide its own launch screen [CustomSplashScreen]
public class SplashActivity extends AppCompatActivity {
             ~~~~~~~~~~~~~~

   Explanation for issues of type "CustomSplashScreen":
   Starting in Android 12 (API 31+), the application's Launch Screen is
   provided by the system and the application should not create its own,
   otherwise the user will see two splashscreens. Please check the
   SplashScreen class to check how the Splash Screen can be controlled and
   customized.

   https://developer.android.com/guide/topics/ui/splash-screen

C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:56: Warning: A newer version of androidx.appcompat:appcompat than 1.3.1 is available: 1.6.1 [GradleDependency]
    implementation("androidx.appcompat:appcompat:1.3.1")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:57: Warning: A newer version of androidx.core:core-ktx than 1.6.0 is available: 1.13.1 [GradleDependency]
    implementation("androidx.core:core-ktx:1.6.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:58: Warning: A newer version of com.google.android.material:material than 1.4.0 is available: 1.12.0 [GradleDependency]
    implementation("com.google.android.material:material:1.4.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:59: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.0.4 is available: 2.1.4 [GradleDependency]
    implementation("androidx.constraintlayout:constraintlayout:2.0.4")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:60: Warning: A newer version of androidx.fragment:fragment than 1.3.6 is available: 1.7.1 [GradleDependency]
    implementation("androidx.fragment:fragment:1.3.6")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\gradle\libs.versions.toml:8: Warning: A newer version of androidx.activity:activity than 1.8.0 is available: 1.9.0 [GradleDependency]
activity = "1.8.0"
           ~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\gradle\libs.versions.toml:8: Warning: A newer version of androidx.activity:activity than 1.8.0 is available: 1.9.0 [GradleDependency]
activity = "1.8.0"
           ~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\gradle\libs.versions.toml:8: Warning: A newer version of androidx.activity:activity than 1.8.0 is available: 1.9.0 [GradleDependency]
activity = "1.8.0"
           ~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\java\com\example\panduansholat\VideoFragment.java:46: Warning: Using setJavaScriptEnabled can introduce XSS vulnerabilities into your application, review carefully [SetJavaScriptEnabled]
        webSettings.setJavaScriptEnabled(true);
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "SetJavaScriptEnabled":
   Your code should not invoke setJavaScriptEnabled if you are not sure that
   your app really requires JavaScript support.

   https://goo.gle/SetJavaScriptEnabled
   https://developer.android.com/training/articles/security-tips

C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\java\com\example\panduansholat\DoaActivity.java:35: Warning: This AsyncTask class should be static or leaks might occur (com.example.panduansholat.DoaActivity.LoadJsonTask) [StaticFieldLeak]
    class LoadJsonTask extends AsyncTask<Void, Void, String> {
          ~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\java\com\example\panduansholat\SholatActivity.java:39: Warning: This AsyncTask class should be static or leaks might occur (com.example.panduansholat.SholatActivity.LoadJsonTask) [StaticFieldLeak]
    class LoadJsonTask extends AsyncTask<Void, Void, String> {
          ~~~~~~~~~~~~

   Explanation for issues of type "StaticFieldLeak":
   A static field will leak contexts.

   Non-static inner classes have an implicit reference to their outer class.
   If that outer class is for example a Fragment or Activity, then this
   reference means that the long-running handler/loader/task will hold a
   reference to the activity which prevents it from getting garbage
   collected.

   Similarly, direct field references to activities and fragments from these
   longer running instances can cause leaks.

   ViewModel classes should never point to Views or non-application Contexts.

C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\activity_splash.xml:9: Warning: This tag and its children can be replaced by one <TextView/> and a compound drawable [UseCompoundDrawables]
    <LinearLayout
     ~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_beranda.xml:19: Warning: This tag and its children can be replaced by one <TextView/> and a compound drawable [UseCompoundDrawables]
            <LinearLayout
             ~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_beranda.xml:44: Warning: This tag and its children can be replaced by one <TextView/> and a compound drawable [UseCompoundDrawables]
            <LinearLayout
             ~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_beranda.xml:69: Warning: This tag and its children can be replaced by one <TextView/> and a compound drawable [UseCompoundDrawables]
            <LinearLayout
             ~~~~~~~~~~~~

   Explanation for issues of type "UseCompoundDrawables":
   A LinearLayout which contains an ImageView and a TextView can be more
   efficiently handled as a compound drawable (a single TextView, using the
   drawableTop, drawableLeft, drawableRight and/or drawableBottom attributes
   to draw one or more images adjacent to the text).

   If the two widgets are offset from each other with margins, this can be
   replaced with a drawablePadding attribute.

   There's a lint quickfix to perform this conversion in the Eclipse plugin.

C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\activity_doa.xml:8: Warning: Possible overdraw: Root element paints background @drawable/wave with a theme that also paints a background (inferred theme is @style/Theme.PanduanSholat) [Overdraw]
    android:background="@drawable/wave">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\activity_sholat.xml:7: Warning: Possible overdraw: Root element paints background @drawable/wave with a theme that also paints a background (inferred theme is @style/Theme.PanduanSholat) [Overdraw]
    android:background="@drawable/wave">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\activity_splash.xml:7: Warning: Possible overdraw: Root element paints background @drawable/wave with a theme that also paints a background (inferred theme is @style/Theme.PanduanSholat) [Overdraw]
    android:background="@drawable/wave">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_beranda.xml:5: Warning: Possible overdraw: Root element paints background @drawable/wave with a theme that also paints a background (inferred theme is @style/Theme.PanduanSholat) [Overdraw]
    android:background="@drawable/wave">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_tentang.xml:6: Warning: Possible overdraw: Root element paints background @drawable/wave with a theme that also paints a background (inferred theme is @style/Theme.PanduanSholat) [Overdraw]
    android:background="@drawable/wave">
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_video.xml:7: Warning: Possible overdraw: Root element paints background @drawable/wave with a theme that also paints a background (inferred theme is @style/Theme.PanduanSholat) [Overdraw]
    android:background="@drawable/wave"
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "Overdraw":
   If you set a background drawable on a root view, then you should use a
   custom theme where the theme background is null. Otherwise, the theme
   background will be painted first, only to have your custom background
   completely cover it; this is called "overdraw".

   NOTE: This detector relies on figuring out which layouts are associated
   with which activities based on scanning the Java code, and it's currently
   doing that using an inexact pattern matching algorithm. Therefore, it can
   incorrectly conclude which activity the layout is associated with and then
   wrongly complain that a background-theme is hidden.

   If you want your custom background on multiple pages, then you should
   consider making a custom theme with your custom background and just using
   that theme instead of a root element background.

   Of course it's possible that your custom drawable is translucent and you
   want it to be mixed with the background. However, you will get better
   performance if you pre-mix the background with your drawable and use that
   resulting image or color as a custom theme background instead.

C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\header.jpg: Warning: The resource R.drawable.header appears to be unused [UnusedResources]
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\ic_launcher_background.xml:2: Warning: The resource R.drawable.ic_launcher_background appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable-v24\ic_launcher_foreground.xml:1: Warning: The resource R.drawable.ic_launcher_foreground appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\niat.png: Warning: The resource R.drawable.niat appears to be unused [UnusedResources]
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\splashh.jpg: Warning: The resource R.drawable.splashh appears to be unused [UnusedResources]
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\values\strings.xml:4: Warning: The resource R.string.hello_blank_fragment appears to be unused [UnusedResources]
    <string name="hello_blank_fragment">Hello blank fragment</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\values-night\themes.xml:3: Warning: The resource R.style.Theme_PanduanSholat_Dark appears to be unused [UnusedResources]
    <style name="Theme.PanduanSholat.Dark" parent="Theme.MaterialComponents.DayNight.NoActionBar">
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_beranda.xml:13: Warning: This LinearLayout layout or its LinearLayout parent is unnecessary [UselessParent]
        <LinearLayout
         ~~~~~~~~~~~~

   Explanation for issues of type "UselessParent":
   A layout with children that has no siblings, is not a scrollview or a root
   layout, and does not have a background, can be removed and have its
   children moved directly into the parent for a flatter and more efficient
   layout hierarchy.

C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\mipmap-anydpi-v26\ic_launcher_splash.xml:2: Warning: The application adaptive icon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\mipmap-anydpi-v26\ic_launcher_splash_round.xml:2: Warning: The application adaptive roundIcon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^

   Explanation for issues of type "MonochromeLauncherIcon":
   If android:roundIcon and android:icon are both in your manifest, you must
   either remove the reference to android:roundIcon if it is not needed; or,
   supply the monochrome icon in the drawable defined by the android:roundIcon
   and android:icon attribute.

   For example, if android:roundIcon and android:icon are both in the
   manifest, a launcher might choose to use android:roundIcon over
   android:icon to display the adaptive app icon. Therefore, your themed
   application iconwill not show if your monochrome attribute is not also
   specified in android:roundIcon.

C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\bacaansholat.png: Warning: Found bitmap drawable res/drawable/bacaansholat.png in densityless folder [IconLocation]
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\doa.png: Warning: Found bitmap drawable res/drawable/doa.png in densityless folder [IconLocation]
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\header.jpg: Warning: Found bitmap drawable res/drawable/header.jpg in densityless folder [IconLocation]
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\niat.png: Warning: Found bitmap drawable res/drawable/niat.png in densityless folder [IconLocation]
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\placeholder.png: Warning: Found bitmap drawable res/drawable/placeholder.png in densityless folder [IconLocation]
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\sholat.png: Warning: Found bitmap drawable res/drawable/sholat.png in densityless folder [IconLocation]
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\splash.png: Warning: Found bitmap drawable res/drawable/splash.png in densityless folder [IconLocation]
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\splashh.jpg: Warning: Found bitmap drawable res/drawable/splashh.jpg in densityless folder [IconLocation]
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\umk.png: Warning: Found bitmap drawable res/drawable/umk.png in densityless folder [IconLocation]
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\drawable\wave.jpg: Warning: Found bitmap drawable res/drawable/wave.jpg in densityless folder [IconLocation]

   Explanation for issues of type "IconLocation":
   The res/drawable folder is intended for density-independent graphics such
   as shapes defined in XML. For bitmaps, move it to drawable-mdpi and
   consider providing higher and lower resolution versions in drawable-ldpi,
   drawable-hdpi and drawable-xhdpi. If the icon really is density independent
   (for example a solid color) you can place it in drawable-nodpi.

   https://developer.android.com/guide/practices/screens_support.html

C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:56: Warning: Use version catalog instead (androidx.appcompat:appcompat is already available as appcompat, but using version 1.6.1 instead) [UseTomlInstead]
    implementation("androidx.appcompat:appcompat:1.3.1")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:57: Warning: Use version catalog instead [UseTomlInstead]
    implementation("androidx.core:core-ktx:1.6.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:58: Warning: Use version catalog instead (com.google.android.material:material is already available as material, but using version 1.12.0 instead) [UseTomlInstead]
    implementation("com.google.android.material:material:1.4.0")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:59: Warning: Use version catalog instead (androidx.constraintlayout:constraintlayout is already available as constraintlayout, but using version 2.1.4 instead) [UseTomlInstead]
    implementation("androidx.constraintlayout:constraintlayout:2.0.4")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:60: Warning: Use version catalog instead [UseTomlInstead]
    implementation("androidx.fragment:fragment:1.3.6")
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:63: Warning: Use the existing version catalog reference (libs.junit) instead [UseTomlInstead]
    testImplementation("junit:junit:4.13.2")
                        ~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:64: Warning: Use version catalog instead [UseTomlInstead]
    implementation ("com.github.bumptech.glide:glide:4.16.0")
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:65: Warning: Use version catalog instead [UseTomlInstead]
    annotationProcessor ("com.github.bumptech.glide:compiler:4.16.0")
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\build.gradle.kts:66: Warning: Use version catalog instead [UseTomlInstead]
    implementation ("com.google.code.gson:gson:2.10.1")
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UseTomlInstead":
   If your project is using a libs.versions.toml file, you should place all
   Gradle dependencies in the TOML file. This lint check looks for version
   declarations outside of the TOML file and suggests moving them (and in the
   IDE, provides a quickfix to performing the operation automatically).

C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\activity_splash.xml:15: Warning: Missing contentDescription attribute on image [ContentDescription]
        <ImageView
         ~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_beranda.xml:27: Warning: Missing contentDescription attribute on image [ContentDescription]
                <ImageView
                 ~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_beranda.xml:52: Warning: Missing contentDescription attribute on image [ContentDescription]
                <ImageView
                 ~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_beranda.xml:77: Warning: Missing contentDescription attribute on image [ContentDescription]
                <ImageView
                 ~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_tentang.xml:15: Warning: Missing contentDescription attribute on image [ContentDescription]
        <ImageView
         ~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\item_sholat.xml:8: Warning: Missing contentDescription attribute on image [ContentDescription]
    <ImageView
     ~~~~~~~~~

   Explanation for issues of type "ContentDescription":
   Non-textual widgets like ImageViews and ImageButtons should use the
   contentDescription attribute to specify a textual description of the widget
   such that screen readers and other accessibility tools can adequately
   describe the user interface.

   Note that elements in application screens that are purely decorative and do
   not provide any content or enable a user action should not have
   accessibility content descriptions. In this case, set their descriptions to
   @null. If your app's minSdkVersion is 16 or higher, you can instead set
   these graphical elements' android:importantForAccessibility attributes to
   no.

   Note that for text fields, you should not set both the hint and the
   contentDescription attributes since the hint will never be shown. Just set
   the hint.

   https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases

C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\activity_splash.xml:30: Warning: Hardcoded string "Panduan Sholat Apk", should use @string resource [HardcodedText]
            android:text="Panduan Sholat Apk"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\menu\bottom_nav_menu.xml:7: Warning: Hardcoded string "Beranda", should use @string resource [HardcodedText]
        android:title="Beranda"
        ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\menu\bottom_nav_menu.xml:12: Warning: Hardcoded string "Video", should use @string resource [HardcodedText]
        android:title="Video"
        ~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\menu\bottom_nav_menu.xml:17: Warning: Hardcoded string "Tentang", should use @string resource [HardcodedText]
        android:title="Tentang"
        ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_beranda.xml:37: Warning: Hardcoded string "Belajar Sholat", should use @string resource [HardcodedText]
                    android:text="Belajar Sholat"
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_beranda.xml:62: Warning: Hardcoded string "Bacaan Shalat", should use @string resource [HardcodedText]
                    android:text="Bacaan Shalat"
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_beranda.xml:87: Warning: Hardcoded string "Do'a", should use @string resource [HardcodedText]
                    android:text="Do'a"
                    ~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_tentang.xml:26: Warning: Hardcoded string "Aplikasi ini dirancang untuk memenuhi tugas akhir Mata Kuliah Praktikum Pemrograman Mobile", should use @string resource [HardcodedText]
            android:text="Aplikasi ini dirancang untuk memenuhi tugas akhir Mata Kuliah Praktikum Pemrograman Mobile"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_tentang.xml:35: Warning: Hardcoded string "Adapun anggota kelompok kami sebagai berikut :", should use @string resource [HardcodedText]
            android:text="Adapun anggota kelompok kami sebagai berikut :"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_tentang.xml:45: Warning: Hardcoded string "Ramadhan Sulthon Alfanie (202251073)", should use @string resource [HardcodedText]
            android:text="Ramadhan Sulthon Alfanie (202251073)"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_tentang.xml:54: Warning: Hardcoded string "Anan Maulana (202251086)", should use @string resource [HardcodedText]
            android:text="Anan Maulana (202251086)"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_tentang.xml:63: Warning: Hardcoded string "Muhammad Rizqi Bagus Trianto (202251088)", should use @string resource [HardcodedText]
            android:text="Muhammad Rizqi Bagus Trianto (202251088)"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_tentang.xml:72: Warning: Hardcoded string "Bryan Daffa Octavianto (202251090)", should use @string resource [HardcodedText]
            android:text="Bryan Daffa Octavianto (202251090)"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_tentang.xml:81: Warning: Hardcoded string "TI-UMK 2024", should use @string resource [HardcodedText]
            android:text="TI-UMK 2024"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_video.xml:21: Warning: Hardcoded string "Animasi Belajar Sholat", should use @string resource [HardcodedText]
            android:text="Animasi Belajar Sholat"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_video.xml:41: Warning: Hardcoded string "Animasi Belajar Wudhu", should use @string resource [HardcodedText]
            android:text="Animasi Belajar Wudhu"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_video.xml:61: Warning: Hardcoded string "Animasi Kumpulan Doa", should use @string resource [HardcodedText]
            android:text="Animasi Kumpulan Doa"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_video.xml:81: Warning: Hardcoded string "Animasi Asma'ul Husna", should use @string resource [HardcodedText]
            android:text="Animasi Asma'ul Husna"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\lenovo\AndroidStudioProjects\PanduanSholat\app\src\main\res\layout\fragment_video.xml:101: Warning: Hardcoded string "Animasi Lagu 25 Nabi", should use @string resource [HardcodedText]
            android:text="Animasi Lagu 25 Nabi"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

0 errors, 76 warnings
